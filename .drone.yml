pipeline:
  ##################################
  ## Github pushes - build with SHA
  ###################################
  # build-platform:
  #   group: build
  #   image: astronomerio/ap-build:0.0.6
  #   commands:
  #     - make build-platform
  #   environment:
  #     - ASTRONOMER_VERSION=${DRONE_COMMIT_SHA:0:8}
  #     - ASTRONOMER_REF=${DRONE_BRANCH}
  #     - BUILD_NUMBER=${DRONE_BUILD_NUMBER}
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   when:
  #     event: push
  #     branch: [ master, release-* ]

  # build-airflow:
  #   group: build
  #   image: astronomerio/ap-build:0.0.6
  #   commands:
  #     - make build-airflow
  #   environment:
  #     - ASTRONOMER_VERSION=${DRONE_COMMIT_SHA:0:8}
  #     - BUILD_NUMBER=${DRONE_BUILD_NUMBER}
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   when:
  #     event: push
  #     branch: [ master, release-* ]

  ##################################
  ## Deployment
  ###################################
  release-platform:
    image: astronomerio/ap-build:0.0.7
    secrets: [ github_api_key ]
    commands:
      - echo ${ASTRONOMER_VERSION}
      - env | grep ASTRONOMER_VERSION
      - release ${DRONE_REPO_NAME} $${GITHUB_API_KEY} ${ASTRONOMER_VERSION} ${DRONE_COMMIT_BRANCH}
    when:
      event: deployment
      environment: production

  # build-platform:
  #   group: build
  #   image: astronomerio/ap-build:0.0.6
  #   commands:
  #     - make update-version
  #     - make build-platform
  #   environment:
  #     - BUILD_NUMBER=${DRONE_BUILD_NUMBER}
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   when:
  #     event: deployment
  #     branch: [ master, release-* ]
  #     environment: production

  # build-airflow:
  #   group: build
  #   image: astronomerio/ap-build:0.0.6
  #   commands:
  #     - make build-airflow
  #   environment:
  #     - BUILD_NUMBER=${DRONE_BUILD_NUMBER}
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   when:
  #     event: deployment
  #     branch: [ master, release-* ]
  #     environment: production

  # Push new versions back to github
  # commit:
  #   image: astronomerio/ap-build:0.0.6
  #   commands:
  #     - mkdir -p /root/.ssh
  #     - echo "$${GIT_PUSH_SSH_KEY}" > /root/.ssh/id_rsa
  #     - chmod 600 /root/.ssh/id_rsa
  #     - ssh-keyscan -H github.com >> /root/.ssh/known_hosts
  #     - git add .
  #     - git -c user.email='bot@astronomer.io' -c user.name='bot' commit -m "[skip ci] Bump to ${ASTRONOMER_VERSION}"
  #     - git push HEAD:${DRONE_BRANCH}
  #   secrets: [ git_push_ssh_key ]
  #   when:
  #     event: deployment
  #     branch: [ master, release-* ]
  #     environment: production

  # push-platform:
  #   group: push
  #   image: astronomerio/ap-build:0.0.6
  #   commands:
  #     - docker login -u $${DOCKER_USERNAME} -p $${DOCKER_PASSWORD}
  #     - make push-platform
  #   environment:
  #     - ASTRONOMER_VERSION=${DRONE_TAG##v}
  #     - BUILD_NUMBER=${DRONE_BUILD_NUMBER}
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   secrets: [ docker_username, docker_password ]
  #   when:
  #     event: tag
  #     branch: [ master, release-* ]

  # push-airflow:
  #   group: push
  #   image: astronomerio/ap-build:0.0.6
  #   commands:
  #     - docker login -u $${DOCKER_USERNAME} -p $${DOCKER_PASSWORD}
  #     - make push-airflow
  #   environment:
  #     - ASTRONOMER_VERSION=${DRONE_TAG##v}
  #     - BUILD_NUMBER=${DRONE_BUILD_NUMBER}
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   secrets: [ docker_username, docker_password ]
  #   when:
  #     event: tag
  #     branch: [ master, release-* ]
